//
// Generated by Microsoft (R) HLSL Shader Compiler 9.27.952.3022
//
// Parameters:

row_major float4x4 ModelViewProj : register(c0);
row_major float3x4 WorldMat : register(c4);
float4 QPosAdjust : register(c7);
float ObjectUV : register(c8);
float4 NormalsScroll0 : register(c9);
float4 NormalsScale : register(c10);
float4 VSFogParam : register(c11);
float4 VSFogNearColor : register(c12);
float4 VSFogFarColor : register(c13);


// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   ModelViewProj[0]  const_0       1
//   ModelViewProj[1]  const_1       1
//   ModelViewProj[2]  const_2       1
//   ModelViewProj[3]  const_3       1
//   WorldMat[0]       const_4       1
//   WorldMat[1]       const_5       1
//   WorldMat[2]       const_6       1
//   QPosAdjust        const_7       1
//   ObjectUV          const_8       1
//   NormalsScroll0    const_9       1
//   NormalsScale      const_10      1
//   VSFogParam        const_11      1
//   VSFogNearColor    const_12      1
//   VSFogFarColor     const_13      1
//


// Structures:

struct VS_INPUT {
    float4 LPOSITION : POSITION;
};

struct VS_OUTPUT {
    float4 LPOSITION : POSITION;
    float4 LTEXCOORD_0 : TEXCOORD0;
    float4 LTEXCOORD_1 : TEXCOORD1;
    float4 LCOLOR_1 : COLOR1;
};

// Code:

VS_OUTPUT main(VS_INPUT IN) {
    VS_OUTPUT OUT;

    float1 q1;
    float1 q2;
    float2 q3;
    float4 r0;
    float4 r1;

    r0.z = dot(WorldMat[2].xyzw, IN.LPOSITION.xyzw);
    r0.y = dot(WorldMat[1].xyzw, IN.LPOSITION.xyzw);
    r0.x = dot(WorldMat[0].xyzw, IN.LPOSITION.xyzw);
    q3.xy = r0.xy + QPosAdjust.xy;
    r1.zw = q3.xy / NormalsScale.y;
    r1.xy = q3.xy / NormalsScale.x;
    OUT.LTEXCOORD_0.w = length(r0.xyz);
    OUT.LTEXCOORD_0.xyz = r0.xyz;
    r0.xyzw = r1.xyzw - ((-abs(ObjectUV.x) < abs(ObjectUV.x) ? 1.0 : 0.0) * r1.xyzw);
    OUT.LTEXCOORD_1.xyzw = r0.xyzw + NormalsScroll0.xyzw;
    r0.z = dot(ModelViewProj[2].xyzw, IN.LPOSITION.xyzw);
    r0.y = dot(ModelViewProj[1].xyzw, IN.LPOSITION.xyzw);
    r0.x = dot(ModelViewProj[0].xyzw, IN.LPOSITION.xyzw);
    q1.x = pow(abs(saturate((length(r0.xyz) * VSFogParam.y) - VSFogParam.x)), NormalsScale.w);
    q2.x = min(q1.x, VSFogFarColor.a);
    r1.xyz = VSFogNearColor.rgb;
    OUT.LPOSITION.w = dot(ModelViewProj[3].xyzw, IN.LPOSITION.xyzw);
    OUT.LPOSITION.xyz = r0.xyz;
    OUT.LCOLOR_1.w = q2.x;
    OUT.LCOLOR_1.xyz = (q2.x * (VSFogFarColor.xxy - r1.xxy)) + VSFogNearColor.rgb;

    return OUT;
};