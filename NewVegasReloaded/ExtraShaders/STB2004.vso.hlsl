//
// Generated by Microsoft (R) HLSL Shader Compiler 9.23.949.2378
//
// Parameters:

float3 FogColor : register(c15);
float4 FogParam : register(c14);
float4 LightData[10] : register(c25);
row_major float4x4 ModelViewProj : register(c0);
float4 WindMatrices[16] : register(c43);
row_major float4x4 TESR_ShadowCameraToLightTransform[2] : register(c59);

// Registers:
//
//   Name          Reg   Size
//   ------------- ----- ----
//   ModelViewProj[0] const_0        1
//   ModelViewProj[1] const_1        1
//   ModelViewProj[2] const_2        1
//   ModelViewProj[3] const_3        1
//   FogParam      const_14      1
//   FogColor      const_15      1
//   LightData[0]     const_25      1
//   WindMatrices[0]  const_43     16
//


// Structures:

struct VS_INPUT {
    float4 LPOSITION : POSITION;
    float3 LTANGENT : TANGENT;
    float3 LBINORMAL : BINORMAL;
    float3 LNORMAL : NORMAL;
    float4 LTEXCOORD_0 : TEXCOORD0;
    float4 LBLENDINDICES : BLENDINDICES;
};

struct VS_OUTPUT {
    float4 color_0 : COLOR0;
    float4 color_1 : COLOR1;
    float4 position : POSITION;
    float2 texcoord_0 : TEXCOORD0;
    float4 texcoord_1 : TEXCOORD1;
	float4 texcoord_6 : TEXCOORD6;
	float4 texcoord_7 : TEXCOORD7;
};

// Code:

VS_OUTPUT main(VS_INPUT IN) {
    VS_OUTPUT OUT;

    const int4 const_4 = {0, 1, 0, 0};

    float3 l8;
    float4 mdl11;
    float1 q1;
    float4 q3;
    float4 r0;
	
#define	TanSpaceProj	float3x3(IN.LTANGENT.xyz, IN.LBINORMAL.xyz, IN.LNORMAL.xyz)

    r0.w = dot(WindMatrices[3 + IN.LBLENDINDICES.y].xyzw, IN.LPOSITION.xyzw);
    r0.z = dot(WindMatrices[2 + IN.LBLENDINDICES.y].xyzw, IN.LPOSITION.xyzw);
    r0.y = dot(WindMatrices[1 + IN.LBLENDINDICES.y].xyzw, IN.LPOSITION.xyzw);
    r0.x = dot(WindMatrices[0 + IN.LBLENDINDICES.y].xyzw, IN.LPOSITION.xyzw);
	OUT.color_0.rgba = (IN.LBLENDINDICES.z * const_4.yyyx) + const_4.xxxy;
	q3.xyzw = (IN.LBLENDINDICES.x * (r0.xyzw - IN.LPOSITION.xyzw)) + IN.LPOSITION.xyzw;
    mdl11 = mul(ModelViewProj, q3.xyzw);
    q1.x = log2(1 - saturate((FogParam.x - length(mdl11.xyz)) / FogParam.y));
    l8.xyz = mul(TanSpaceProj, LightData[0].xyz);
    OUT.color_1.rgb = FogColor.rgb;
    OUT.texcoord_1.xyz = normalize(l8.xyz);
    OUT.color_1.a = exp2(q1.x * FogParam.z);
    OUT.position = mdl11;
    OUT.texcoord_0.xy = IN.LTEXCOORD_0.xy;
    OUT.texcoord_1.w = 1;
	OUT.texcoord_6 = mul(mdl11, TESR_ShadowCameraToLightTransform[0]);
	OUT.texcoord_7 = mul(mdl11, TESR_ShadowCameraToLightTransform[1]);
	
    return OUT;
};

// approximately 37 instruction slots used